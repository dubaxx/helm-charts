global:
  scrape_interval: 5s
  evaluation_interval: 5s
# remote_write:
#   - url: http://prometheus-managed.{{ default "monitoring" .Values.global.namespace }}.svc.cluster.local:9090
rule_files:
  - /etc/prometheus/prometheus.rules
alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - "alertmanager.monitoring.svc:9093"

scrape_configs:
  - job_name: 'node-exporter'
    kubernetes_sd_configs:
      - role: endpoints
    relabel_configs:
    - source_labels: [__meta_kubernetes_endpoints_name]
      regex: 'node-exporter'
      action: keep
  
  - job_name: 'kubernetes-apiservers'

    kubernetes_sd_configs:
    - role: endpoints
    scheme: https

    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'

    scheme: https

    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    kubernetes_sd_configs:
    - role: node

    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics     
  
  - job_name: 'kubernetes-pods'

    kubernetes_sd_configs:
    - role: pod

    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name
  
  # - job_name: 'kube-state-metrics'
  #   static_configs:
  #     - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']

  - job_name: 'kubernetes-cadvisor'

    scheme: https

    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

    kubernetes_sd_configs:
    - role: node

    relabel_configs:
    - action: labelmap
      regex: __meta_kubernetes_node_label_(.+)
    - target_label: __address__
      replacement: kubernetes.default.svc:443
    - source_labels: [__meta_kubernetes_node_name]
      regex: (.+)
      target_label: __metrics_path__
      replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
  
  - job_name: 'kubernetes-service-endpoints'

    kubernetes_sd_configs:
    - role: endpoints

    relabel_configs:
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
      action: replace
      target_label: __scheme__
      regex: (https?)
    - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
      action: replace
      target_label: __address__
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
    - action: labelmap
      regex: __meta_kubernetes_service_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_service_name]
      action: replace
      target_label: kubernetes_name

  - job_name: 'prometheus'
    scrape_interval: 5s
    metric_relabel_configs:
    - source_labels: [instance]
      regex: '(.*):.*'
      replacement: '$1'
      target_label: instance
    static_configs:
    - targets: ['localhost:9090']

  - job_name: 'clearblade-monitoring-{{ $.Values.global.deploymentnamespace }}'
    scrape_interval: 5s
    metric_relabel_configs:
    - source_labels: [instance]
      regex: '(.*):.*'
      replacement: '$1'
      target_label: instance
    static_configs:
    - targets:
      {{- range $i, $e := until (.Values.clearbladereplicas | int)}}
      - clearblade-monitoring-service-{{$i}}.{{ $.Values.global.deploymentnamespace }}.svc.cluster.local:2112
      {{- end}}

  - job_name: 'clearblade-monitoring-green-{{ $.Values.global.deploymentnamespace }}'
    scrape_interval: 5s
    metric_relabel_configs:
    - source_labels: [instance]
      regex: '(.*):.*'
      replacement: '$1'
      target_label: instance
    static_configs:
    - targets:
      {{- range $i, $e := until (.Values.clearbladereplicas | int)}}
      - clearblade-monitoring-service-green-{{$i}}.{{ $.Values.global.deploymentnamespace }}.svc.cluster.local:2112
      {{- end}}

  - job_name: 'haproxy-{{ $.Values.global.deploymentnamespace }}'
    scrape_interval: 5s
    metric_relabel_configs:
    - source_labels: [instance]
      regex: '(.*):.*'
      replacement: '$1'
      target_label: instance
    static_configs:
    - targets:
      {{- range $i, $e := until (.Values.haproxyreplicas | int)}}
      - cb-haproxy-monitoring-service-{{$i}}.{{ $.Values.global.deploymentnamespace }}.svc.cluster.local:9101
      {{- end}}

  - job_name: 'redis-{{ $.Values.global.deploymentnamespace }}'
    scrape_interval: 5s
    metric_relabel_configs:
    - source_labels: [instance]
      regex: '(.*):.*'
      replacement: '$1'
      target_label: instance
    static_configs:
    - targets:
      - cb-redis-service.{{ $.Values.global.deploymentnamespace }}.svc.cluster.local:9121

  - job_name: 'postgres-{{ $.Values.global.deploymentnamespace }}'
    scrape_interval: 5s
    metric_relabel_configs:
    - source_labels: [instance]
      regex: '(.*):.*'
      replacement: '$1'
      target_label: instance
    static_configs:
    - targets:
      {{- range $i, $e := until (.Values.postgresreplicas | int)}}
      - cb-postgres-exporter-service-{{$i}}.{{ $.Values.global.deploymentnamespace }}.svc.cluster.local:9187
      {{- end}}

  - job_name: 'haproxy-monitoring-{{ default "monitoring" .Values.global.namespace }}'
    scrape_interval: 5s
    metric_relabel_configs:
    - source_labels: [instance]
      regex: '(.*):.*'
      replacement: '$1'
      target_label: instance
    static_configs:
    - targets:
      - cb-haproxy-monitoring-service.{{ default "monitoring" .Values.global.namespace }}.svc.cluster.local:9101