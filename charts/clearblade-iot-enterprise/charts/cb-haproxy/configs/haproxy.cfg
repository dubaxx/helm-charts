global
  stats socket ipv4@127.0.0.1:9999 level admin
  stats socket /var/run/cb-haproxy.sock mode 666 level admin
  stats timeout 2m
  maxconn 524000
  max-spread-checks 2000 # sends all health checks within a 2s window, rather than using "inter" which we have set to 10s. matches behavior from before changing "inter" value.
  log stdout format raw local0 debug
  {{- if not .Values.useDefaultCiphers }}
  tune.ssl.default-dh-param 2048
  ssl-default-bind-options ssl-min-ver TLSv1.0
  ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA:DES-CBC3-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA
  ssl-default-server-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA:AES256-SHA:DES-CBC3-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA
  ssl-default-server-options ssl-min-ver TLSv1.0
  {{- end }}

defaults
  mode    http
  maxconn 524000
  timeout connect 5s
  timeout http-request 5s
  timeout client 120s
  timeout server 600s
  option dontlognull
  errorfile 408 /dev/null # for the chrome pre-connect bug

frontend http
  mode http
  log global
  option httplog
  option http-server-close # wrong acl was being selected on small percentage of requests. https://stackoverflow.com/questions/12843023/haproxy-sometimes-selects-wrong-acl
  bind *:8080
  bind *:8443 ssl crt /etc/ssl/
  http-request capture req.hdrs len 512
  log-format '{"pid":%pid,"haproxy_frontend_type":"http","haproxy_process_concurrent_connections":%ac,"haproxy_frontend_concurrent_connections":%fc,"haproxy_backend_concurrent_connections":%bc,"haproxy_server_concurrent_connections":%sc,"haproxy_backend_queue":%bq,"haproxy_server_queue":%sq,"haproxy_client_request_send_time":%Tq,"haproxy_queue_wait_time":%Tw,"haproxy_server_wait_time":%Tc,"haproxy_server_response_send_time":%Tr,"response_time":%Td,"session_duration":%Tt,"request_termination_state":"%tsc","haproxy_server_connection_retries":%rc,"remote_addr":"%ci","remote_port":%cp,"frontend_addr":"%fi","frontend_port":%fp,"frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","request_method":"%HM","request_uri":"%[capture.req.uri,json(utf8s)]","request_http_version":"%HV", "referer":"%[capture.req.hdr(1),json(utf8s)]","haproxy_frontend_name":"%f","haproxy_backend_name":"%b","haproxy_server_name":"%s","status":%ST,"response_size":%B,"request_size":%U}'
  redirect scheme https code 301 if !{ ssl_fc }

  {{- if .Values.global.iotCore.enabled }}
  # Rediret customers to the iot-core landing
  acl is_root path -i /
  redirect code 301 prefix /iot-core if is_root
  
  acl iotcore_req path_beg /iot-core
  acl iotcore_req path_beg /iotcore
  use_backend iotcore if iotcore_req
  {{- end }}

  # Backend requests
  acl api_req path_beg /api
  acl api_req path_beg /admin
  acl api_req path_beg /codeadmin
  use_backend apiserver if api_req

  # Export requests need bigger timeout
  acl export_req path_beg /console-api/batch/export
  use_backend console_export if export_req

  # All the rest go to cb_console
  default_backend console
{{- if .Values.global.mtlsClearBlade}}
listen mtls
  bind *:444
  mode tcp
  log global
  option tcplog
  balance leastconn
  #cbcontroller: begin mtls
  server clearblade clearblade-service.{{ .Values.global.namespace }}.svc.cluster.local:9001 check inter 10000
  #cbcontroller: end mtls

{{- else if .Values.global.mtlsHAProxy }}
frontend http_mtls
  mode http
  log global
  option httplog
  option http-server-close
  bind *:8444 ssl crt /etc/ssl/ ca-file /etc/mtls/ verify required
  http-request capture req.hdrs len 512
  log-format '{"pid":%pid,"haproxy_frontend_type":"http","haproxy_process_concurrent_connections":%ac,"haproxy_frontend_concurrent_connections":%fc,"haproxy_backend_concurrent_connections":%bc,"haproxy_server_concurrent_connections":%sc,"haproxy_backend_queue":%bq,"haproxy_server_queue":%sq,"haproxy_client_request_send_time":%Tq,"haproxy_queue_wait_time":%Tw,"haproxy_server_wait_time":%Tc,"haproxy_server_response_send_time":%Tr,"response_time":%Td,"session_duration":%Tt,"request_termination_state":"%tsc","haproxy_server_connection_retries":%rc,"remote_addr":"%ci","remote_port":%cp,"frontend_addr":"%fi","frontend_port":%fp,"frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","request_method":"%HM","request_uri":"%[capture.req.uri,json(utf8s)]","request_http_version":"%HV", "referer":"%[capture.req.hdr(1),json(utf8s)]","haproxy_frontend_name":"%f","haproxy_backend_name":"%b","haproxy_server_name":"%s","status":%ST,"response_size":%B,"request_size":%U}'
  redirect scheme https code 301 if !{ ssl_fc }
  default_backend mtls_server

backend mtls_server
  mode http
  option forwardfor
  balance roundrobin
  http-request set-header X-Client-Certificate %[ssl_c_der,base64]
  http-request add-header Cb-Mtls-Verified "verified"
  #cbcontroller: begin apiserver
  server clearblade clearblade-service.{{ .Values.global.namespace }}.svc.cluster.local:9001 check inter 10000
  #cbcontroller: end apiserver
{{- end}}

backend console
  mode http
  server console cb-console-service.{{ .Values.global.namespace }}.svc.cluster.local:3000 check inter 10000

backend console_export
  mode http
  timeout server 20m # Bigger timeout for export
  server console cb-console-service.{{ .Values.global.namespace }}.svc.cluster.local:3000 check inter 10000

backend apiserver
  mode http
  option forwardfor # add X-Forwarded-For header with client IP
  balance roundrobin
  server clearblade clearblade-service.{{ .Values.global.namespace }}.svc.cluster.local:9000 check inter 10000

{{- if .Values.global.iotCore.enabled }}
backend iotcore
  mode http
  server iotcore cb-iotcore-service.{{ .Values.global.namespace }}.svc.cluster.local:3000 check inter 10000
{{- end }}

{{- if .Values.monitoringEnabled }}
listen stats
  bind *:9876
  mode http
  log global
  log-format '{"pid":%pid,"haproxy_frontend_type":"http","haproxy_process_concurrent_connections":%ac,"haproxy_frontend_concurrent_connections":%fc,"haproxy_backend_concurrent_connections":%bc,"haproxy_server_concurrent_connections":%sc,"haproxy_backend_queue":%bq,"haproxy_server_queue":%sq,"haproxy_client_request_send_time":%Tq,"haproxy_queue_wait_time":%Tw,"haproxy_server_wait_time":%Tc,"haproxy_server_response_send_time":%Tr,"response_time":%Td,"session_duration":%Tt,"request_termination_state":"%tsc","haproxy_server_connection_retries":%rc,"remote_addr":"%ci","remote_port":%cp,"frontend_addr":"%fi","frontend_port":%fp,"frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","request_method":"%HM","request_uri":"%[capture.req.uri,json(utf8s)]","request_http_version":"%HV", "referer":"%[capture.req.hdr(1),json(utf8s)]","haproxy_frontend_name":"%f","haproxy_backend_name":"%b","haproxy_server_name":"%s","status":%ST,"response_size":%B,"request_size":%U}'
  option httplog
  option dontlog-normal
  stats enable
  stats hide-version
  stats realm Haproxy\ Statistics
  stats uri /haproxy_stats
  stats auth {{ .Values.stats_auth }}
{{- end }}

listen mqtt
  bind *:1883
  bind *:1884 ssl crt /etc/ssl/
  timeout client 1200s
  timeout server 1200s
  mode tcp
  option tcplog
  log global
  log-format '{"pid":%pid,"haproxy_frontend_type":"tcp","haproxy_process_concurrent_connections":%ac,"haproxy_frontend_concurrent_connections":%fc,"haproxy_backend_concurrent_connections":%bc,"haproxy_server_concurrent_connections":%sc,"haproxy_backend_queue":%bq,"haproxy_server_queue":%sq,"haproxy_queue_wait_time":%Tw,"haproxy_server_wait_time":%Tc,"response_time":%Td,"session_duration":%Tt,"request_termination_state":"%tsc","haproxy_server_connection_retries":%rc,"remote_addr":"%ci","remote_port":%cp,"frontend_addr":"%fi","frontend_port":%fp,"frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","haproxy_frontend_name":"%f","haproxy_backend_name":"%b","haproxy_server_name":"%s","response_size":%B,"request_size":%U}'
  balance leastconn
  server clearblade clearblade-service.{{ .Values.global.namespace }}.svc.cluster.local:1883 check inter 10000 port 1883

listen mqtt_ws
  mode http
  log global
  option httplog
  log-format '{"pid":%pid,"haproxy_frontend_type":"http","haproxy_process_concurrent_connections":%ac,"haproxy_frontend_concurrent_connections":%fc,"haproxy_backend_concurrent_connections":%bc,"haproxy_server_concurrent_connections":%sc,"haproxy_backend_queue":%bq,"haproxy_server_queue":%sq,"haproxy_client_request_send_time":%Tq,"haproxy_queue_wait_time":%Tw,"haproxy_server_wait_time":%Tc,"haproxy_server_response_send_time":%Tr,"response_time":%Td,"session_duration":%Tt,"request_termination_state":"%tsc","haproxy_server_connection_retries":%rc,"remote_addr":"%ci","remote_port":%cp,"frontend_addr":"%fi","frontend_port":%fp,"frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","request_method":"%HM","request_uri":"%[capture.req.uri,json(utf8s)]","request_http_version":"%HV", "referer":"%[capture.req.hdr(1),json(utf8s)]","haproxy_frontend_name":"%f","haproxy_backend_name":"%b","haproxy_server_name":"%s","status":%ST,"response_size":%B,"request_size":%U}'
  option http-server-close
  option httpclose
  option forwardfor # add X-Forwarded-For header with client IP
  bind *:8903
  bind *:8904 ssl crt /etc/ssl/
  balance leastconn
  server clearblade clearblade-service.{{ .Values.global.namespace }}.svc.cluster.local:8903 check inter 10000

listen mqtt_auth
  mode tcp
  log global
  option tcplog
  log-format '{"pid":%pid,"haproxy_frontend_type":"tcp","haproxy_process_concurrent_connections":%ac,"haproxy_frontend_concurrent_connections":%fc,"haproxy_backend_concurrent_connections":%bc,"haproxy_server_concurrent_connections":%sc,"haproxy_backend_queue":%bq,"haproxy_server_queue":%sq,"haproxy_queue_wait_time":%Tw,"haproxy_server_wait_time":%Tc,"response_time":%Td,"session_duration":%Tt,"request_termination_state":"%tsc","haproxy_server_connection_retries":%rc,"remote_addr":"%ci","remote_port":%cp,"frontend_addr":"%fi","frontend_port":%fp,"frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","haproxy_frontend_name":"%f","haproxy_backend_name":"%b","haproxy_server_name":"%s","response_size":%B,"request_size":%U}'
  bind *:8905
  bind *:8906 ssl crt /etc/ssl/
  balance leastconn
  server clearblade clearblade-service.{{ .Values.global.namespace }}.svc.cluster.local:8905 check inter 10000 port 8905

listen mqtt_ws_auth
  mode http
  log global
  log-format '{"pid":%pid,"haproxy_frontend_type":"http","haproxy_process_concurrent_connections":%ac,"haproxy_frontend_concurrent_connections":%fc,"haproxy_backend_concurrent_connections":%bc,"haproxy_server_concurrent_connections":%sc,"haproxy_backend_queue":%bq,"haproxy_server_queue":%sq,"haproxy_client_request_send_time":%Tq,"haproxy_queue_wait_time":%Tw,"haproxy_server_wait_time":%Tc,"haproxy_server_response_send_time":%Tr,"response_time":%Td,"session_duration":%Tt,"request_termination_state":"%tsc","haproxy_server_connection_retries":%rc,"remote_addr":"%ci","remote_port":%cp,"frontend_addr":"%fi","frontend_port":%fp,"frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","request_method":"%HM","request_uri":"%[capture.req.uri,json(utf8s)]","request_http_version":"%HV", "referer":"%[capture.req.hdr(1),json(utf8s)]","haproxy_frontend_name":"%f","haproxy_backend_name":"%b","haproxy_server_name":"%s","status":%ST,"response_size":%B,"request_size":%U}'
  option httplog
  option http-server-close
  option httpclose
  option forwardfor # add X-Forwarded-For header with client IP
  bind *:8907
  bind *:8908 ssl crt /etc/ssl/
  balance leastconn
  server clearblade clearblade-service.{{ .Values.global.namespace }}.svc.cluster.local:8907 check inter 10000

listen rpc
  mode tcp
  log global
  option tcplog
  log-format '{"pid":%pid,"haproxy_frontend_type":"tcp","haproxy_process_concurrent_connections":%ac,"haproxy_frontend_concurrent_connections":%fc,"haproxy_backend_concurrent_connections":%bc,"haproxy_server_concurrent_connections":%sc,"haproxy_backend_queue":%bq,"haproxy_server_queue":%sq,"haproxy_queue_wait_time":%Tw,"haproxy_server_wait_time":%Tc,"response_time":%Td,"session_duration":%Tt,"request_termination_state":"%tsc","haproxy_server_connection_retries":%rc,"remote_addr":"%ci","remote_port":%cp,"frontend_addr":"%fi","frontend_port":%fp,"frontend_ssl_version":"%sslv","frontend_ssl_ciphers":"%sslc","haproxy_frontend_name":"%f","haproxy_backend_name":"%b","haproxy_server_name":"%s","response_size":%B,"request_size":%U}'
  bind *:8950
  bind *:8951 ssl crt /etc/ssl/
  balance leastconn
  server clearblade clearblade-service.{{ .Values.global.namespace }}.svc.cluster.local:8950 check inter 10000 port 8950
