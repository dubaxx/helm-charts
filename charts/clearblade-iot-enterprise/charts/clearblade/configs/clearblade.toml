Title = "ClearBlade IoT Enterprise Configuration File"

[License]
PKey = "{{ .Values.license.key }}"
RegistrationKey = "{{ .Values.global.enterprise.registrationKey }}"
AutoRenewLicense = {{ .Values.license.autoRenew.enabled }}
LicenseRenewalWebhook = "https://iot-enterprise.clearblade.com/api/v/4/webhook/execute/e4f0b4d50c82959adae6f1ba89da01/requestLicenseRenewal"
LicenseAutoRenewDays = {{ .Values.license.autoRenew.days }}
PlatformID = "{{ .Values.license.instanceID }}"

[Logging]
LogLevel = "{{ .Values.logLevel }}"
LogFormat = "json"

[LeanMode]
LeanMode = false
StoreAnalytics = true
StoreCodeLogs = {{ .Values.storeCodeLogs }}
StoreMessageHistory = {{ .Values.storeMessageHistory }}

[HTTP]
HttpURL = "{{- include "clearblade-iot-enterprise.platformURL" . | trim }}"
{{- if .Values.global.enterprise.consoleURL }}
ConsoleURL = "https://{{ .Values.global.enterprise.consoleURL}}"
{{- else }}
ConsoleURL = "{{- include "clearblade-iot-enterprise.platformURL" . | trim }}"
{{- end }}

[MQTT]
MessagingURL = "{{- include "clearblade-iot-enterprise.wsMqttMessagingURL" . | trim }}"
AllowDuplicateClientId = {{ .Values.mqtt.allowDuplicateClientID }}
MaxPublishSize = {{ .Values.mqtt.maxPublishSize | replace ":" "" }}
EnforceMQTTKeepAlive = {{ .Values.mqtt.enforceKeepAlive }}
IgnorePermissionErrors = {{ .Values.mqtt.ignorePermissionErrors }}
AllowRetainedMessages = {{ .Values.mqtt.allowRetainedMessages }}

[Database]
{{- if ((.Values.global.advanced.externalPostgres).host) }}
DBHost = "{{ .Values.global.advanced.externalPostgres.host }}"
{{- else if (.Values.global.advanced.cloudSQL).enabled }}
DBHost = "127.0.0.1"
DisableTimescale = true
{{- else }}
DBHost = "cb-postgres-0.cb-postgres-headless.{{ .Values.global.namespace }}.svc.cluster.local"
{{- end }}
{{- if ((.Values.global.advanced.externalPostgres).port) }}
DBPort = "{{ .Values.global.advanced.externalPostgres.port }}"
{{- else }}
DBPort = "5432"
{{- end }}
DBPassword = "{db_password}"
MongoOperationTimeoutSeconds = 60
MongoMaxPoolSize = 100
{{- if ((.Values.global.advanced.externalPostgres).disableTimescale) }}
DisableTimescale = {{ .Values.global.advanced.externalPostgres.disableTimescale }}
{{- end }}

[Security]
ExpireDevTokens = false
InsecureAuth = false
MEKStorageLocation = "/etc/clearblade/mek"
{{- if .Values.global.mtlsClearBlade }}
# uses first cert in chain if multiple
Cert = "/etc/clearblade/ssl/clearblade-0.pem"
EnableMutualTLSAuth = true
CheckCertificateCNForMTLS = true
{{- else if .Values.global.mtlsHAProxy }}
EnableMutualTLSAuth = true
CheckCertificateCNForMTLS = true
{{- end}}

[Debug]
DisablePprof = false

[RPC]
RPCTimeout = 120

[Cluster]
HostAddress = "clearblade{slot}-{clearblade_node_number}.clearblade-cluster-nodes-service.{{ .Values.global.namespace }}.svc.cluster.local"

[FileHosting]
URL = "http://cb-file-hosting-service.{{ .Values.global.namespace }}.svc.cluster.local:80"

[Triage]
PerformTriage = true
PerformStackTriage = true

[Locks]
MaxLockTime = 600
MaxLockWaitTime = 900

{{ if gt .Values.replicas 1.0}}
[KVStore]
{{ if (.Values.global.advanced.memoryStore).enabled }}
SkipSettingNotifyKeyspaceEvents = true
Address = "{{ .Values.global.advanced.memoryStore.address }}"
{{ else }}
Address = "cb-redis-service.{{ .Values.global.namespace }}.svc.cluster.local"
{{- end }}
Port = "6379"
Store = "redis"
{{- end}}

[IotCore]
DeviceTimestampCacheSeconds = {{ .Values.iotCore.deviceTimestampCacheSeconds }}

[MessageHistory]
EnableDeviceStateHistoryCleanup = {{ .Values.iotCore.deviceStateCleanup.enabled }}
DeviceStateHistoryCleanupInterval = {{ .Values.iotCore.deviceStateCleanup.interval }}
MinDeviceStatesToKeep = {{ .Values.iotCore.deviceStateCleanup.minToKeep }}

[Metrics]
ReportMetrics = {{ .Values.license.reporting.enabled }}
ReportIntervalHours = {{ .Values.license.reporting.reportInterval }}
MetricWebhook = "https://iot-enterprise.clearblade.com/api/v/4/webhook/execute/e4f0b4d50c82959adae6f1ba89da01/reportInstanceUsage"